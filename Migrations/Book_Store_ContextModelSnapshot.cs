// <auto-generated />
using Book_Store.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Book_Store.Migrations
{
    [DbContext(typeof(Book_Store_Context))]
    partial class Book_Store_ContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .UseCollation("SQL_Latin1_General_CP1_CI_AS")
                .HasAnnotation("ProductVersion", "6.0.11")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("Book_Store.Models.Admin", b =>
                {
                    b.Property<int>("AdminId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("adminId");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("AdminId"), 1L, 1);

                    b.Property<string>("FullName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("fullName");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("password");

                    b.Property<string>("Role")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)")
                        .HasColumnName("role");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("username");

                    b.HasKey("AdminId");

                    b.ToTable("admin", (string)null);
                });

            modelBuilder.Entity("Book_Store.Models.Book", b =>
                {
                    b.Property<int>("BookId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("bookId");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("BookId"), 1L, 1);

                    b.Property<string>("BookAuthor")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("bookAuthor");

                    b.Property<string>("BookDesc")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)")
                        .HasColumnName("bookDesc");

                    b.Property<string>("BookImage")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("bookImage");

                    b.Property<string>("BookName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("bookName");

                    b.Property<double>("BookPrice")
                        .HasColumnType("float")
                        .HasColumnName("bookPrice");

                    b.Property<int>("BookQty")
                        .HasColumnType("int")
                        .HasColumnName("bookQty");

                    b.Property<int>("FkCategoryId")
                        .HasColumnType("int")
                        .HasColumnName("fk_categoryId");

                    b.HasKey("BookId");

                    b.HasIndex("FkCategoryId");

                    b.ToTable("books", (string)null);
                });

            modelBuilder.Entity("Book_Store.Models.Cart", b =>
                {
                    b.Property<int>("CartId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("cartId");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CartId"), 1L, 1);

                    b.Property<int>("FkBookId")
                        .HasColumnType("int")
                        .HasColumnName("fk_bookId");

                    b.Property<int>("FkCustomerId")
                        .HasColumnType("int")
                        .HasColumnName("fk_customerId");

                    b.Property<int>("Qty")
                        .HasColumnType("int")
                        .HasColumnName("qty");

                    b.Property<double>("TotalPrice")
                        .HasColumnType("float")
                        .HasColumnName("totalPrice");

                    b.HasKey("CartId");

                    b.HasIndex("FkBookId");

                    b.HasIndex("FkCustomerId");

                    b.ToTable("cart", (string)null);
                });

            modelBuilder.Entity("Book_Store.Models.Category", b =>
                {
                    b.Property<int>("CategoryId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("categoryId");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CategoryId"), 1L, 1);

                    b.Property<string>("CategoryName")
                        .IsRequired()
                        .HasMaxLength(70)
                        .HasColumnType("nvarchar(70)")
                        .HasColumnName("categoryName");

                    b.HasKey("CategoryId");

                    b.ToTable("categories", (string)null);
                });

            modelBuilder.Entity("Book_Store.Models.Customer", b =>
                {
                    b.Property<int>("CustomerId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("customerId");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CustomerId"), 1L, 1);

                    b.Property<string>("CustomerAddress")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("customerAddress");

                    b.Property<string>("CustomerEmail")
                        .IsRequired()
                        .HasMaxLength(60)
                        .HasColumnType("nvarchar(60)")
                        .HasColumnName("customerEmail");

                    b.Property<string>("CustomerName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("customerName");

                    b.Property<string>("CustomerPassword")
                        .IsRequired()
                        .HasMaxLength(60)
                        .HasColumnType("nvarchar(60)")
                        .HasColumnName("customerPassword");

                    b.Property<string>("CustomerPhone")
                        .IsRequired()
                        .HasMaxLength(24)
                        .HasColumnType("nvarchar(24)")
                        .HasColumnName("customerPhone");

                    b.Property<string>("Role")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)")
                        .HasColumnName("role");

                    b.HasKey("CustomerId");

                    b.ToTable("customers", (string)null);
                });

            modelBuilder.Entity("Book_Store.Models.Order", b =>
                {
                    b.Property<int>("OrderId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("orderId");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("OrderId"), 1L, 1);

                    b.Property<string>("AddressDetail")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("addressDetail");

                    b.Property<int>("FkCustomerId")
                        .HasColumnType("int")
                        .HasColumnName("fk_customerId");

                    b.Property<string>("FullName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("fullName");

                    b.Property<string>("OrderDate")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("orderDate");

                    b.Property<int>("OrderStatus")
                        .HasColumnType("int")
                        .HasColumnName("orderStatus");

                    b.Property<string>("PhoneNumber")
                        .IsRequired()
                        .HasMaxLength(24)
                        .HasColumnType("nvarchar(24)")
                        .HasColumnName("phoneNumber");

                    b.Property<double>("TotalPrice")
                        .HasColumnType("float")
                        .HasColumnName("totalPrice");

                    b.HasKey("OrderId");

                    b.HasIndex("FkCustomerId");

                    b.ToTable("orders", (string)null);
                });

            modelBuilder.Entity("Book_Store.Models.OrderDetail", b =>
                {
                    b.Property<int>("OrderDetailId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("orderDetail_Id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("OrderDetailId"), 1L, 1);

                    b.Property<int>("FkBookId")
                        .HasColumnType("int")
                        .HasColumnName("fk_bookId");

                    b.Property<int>("FkOrderId")
                        .HasColumnType("int")
                        .HasColumnName("fk_orderId");

                    b.Property<double>("Price")
                        .HasColumnType("float")
                        .HasColumnName("price");

                    b.Property<int>("Qty")
                        .HasColumnType("int")
                        .HasColumnName("qty");

                    b.HasKey("OrderDetailId");

                    b.HasIndex("FkBookId");

                    b.HasIndex("FkOrderId");

                    b.ToTable("order_details", (string)null);
                });

            modelBuilder.Entity("Book_Store.Models.Book", b =>
                {
                    b.HasOne("Book_Store.Models.Category", "FkCategory")
                        .WithMany("Books")
                        .HasForeignKey("FkCategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK_CategoryId_Books");

                    b.Navigation("FkCategory");
                });

            modelBuilder.Entity("Book_Store.Models.Cart", b =>
                {
                    b.HasOne("Book_Store.Models.Book", "FkBook")
                        .WithMany("Carts")
                        .HasForeignKey("FkBookId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK_BookId_CART");

                    b.HasOne("Book_Store.Models.Customer", "FkCustomer")
                        .WithMany("Carts")
                        .HasForeignKey("FkCustomerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK_CustomerId_Cart");

                    b.Navigation("FkBook");

                    b.Navigation("FkCustomer");
                });

            modelBuilder.Entity("Book_Store.Models.Order", b =>
                {
                    b.HasOne("Book_Store.Models.Customer", "FkCustomer")
                        .WithMany("Orders")
                        .HasForeignKey("FkCustomerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK_CustomerId_Orders");

                    b.Navigation("FkCustomer");
                });

            modelBuilder.Entity("Book_Store.Models.OrderDetail", b =>
                {
                    b.HasOne("Book_Store.Models.Book", "FkBook")
                        .WithMany("OrderDetails")
                        .HasForeignKey("FkBookId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK_BookId_Order_Details");

                    b.HasOne("Book_Store.Models.Order", "FkOrder")
                        .WithMany("OrderDetails")
                        .HasForeignKey("FkOrderId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK_OrderId_Order_Details");

                    b.Navigation("FkBook");

                    b.Navigation("FkOrder");
                });

            modelBuilder.Entity("Book_Store.Models.Book", b =>
                {
                    b.Navigation("Carts");

                    b.Navigation("OrderDetails");
                });

            modelBuilder.Entity("Book_Store.Models.Category", b =>
                {
                    b.Navigation("Books");
                });

            modelBuilder.Entity("Book_Store.Models.Customer", b =>
                {
                    b.Navigation("Carts");

                    b.Navigation("Orders");
                });

            modelBuilder.Entity("Book_Store.Models.Order", b =>
                {
                    b.Navigation("OrderDetails");
                });
#pragma warning restore 612, 618
        }
    }
}
